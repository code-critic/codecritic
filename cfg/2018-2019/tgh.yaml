
#- id: P01
  #name: problem-01
  #timeout: 120 # max time per solution, default is 60
  #reference:
    #name: main.py
    #lang: PY-367
  #tests:
    #- id: HELLO-WORLD
    #- id: HELLO-WORLD-2
      #size: 50
    #- id: HELLO-WORLD-3
      #random: 5
      #size: 15


#- id: P02
  #name: problem-02
  #avail: 2019-03-11 16:00:00
  #reference:
    #name: foobar.py
    #lang: PY-367
  #tests:
    #- id: HELLO-WORLD
    #- id: HELLO-WORLD-2
      #size: 50
    #- id: HELLO-WORLD-3
      #random: 5
      #size: 15

- id: WEBISL
  name: Web islands
  avail: 2019-04-04 00:00:00
  
  reference:
    name: webisl.cpp
    lang: CPP
  tests:
    - id: WEBISL_case_1
      size: 4
      time: 0.02
    - id: WEBISL_case_2
      size: 6
      time: 0.02
    - id: WEBISL_case_3
      size: 8
      time: 0.02
    - id: WEBISL_case_4
      size: 10
      time: 0.02
      random: 2
    - id: WEBISL_case_5
      size: 100
      time: 0.02
      random: 2
    - id: WEBISL_case_6
      size: 1000
      time: 0.05               # 0.016 s
    - id: WEBISL_case_7
      size: 10000
      time: 0.2                # 0.113 s
    - id: WEBISL_case_8
      size: 100000
      time: 2                  # 1 s
    - id: WEBISL_case_9
      size: 500000
      time: 10                 # 5 s

    
    
    
#BIGLOKO1:
  #id: BIGLOKO1
  #name: Zeleznice
  #ref_script: "../generic"
  #input:
  #- id: BIGLOKO1_1
    #time: 0.1
  #- id: BIGLOKO1_2
    #time: 0.1
  #- id: BIGLOKO1_100
    #time: 0.1
  #- id: BIGLOKO1_1000
    #time: 0.1
  #- id: BIGLOKO1_10k
    #time: 0.3
  #- id: BIGLOKO1_100k
    #time: 3

    
#SCHEDULE:
  #id: SCHEDULE
  #name: Rozvrh
  #ref_script: schedule.py
  #ref_lang: PYTHON35
  #problem_size_description: 'Number of subjects = n_vtx.'
  #input:
  #- id: SCHEDULE_1
    #time: 0.1
  #- problem_size: 100
    #id: SCHEDULE_2
    #time: 0.1
  #- problem_size: 101
    #id: SCHEDULE_3
    #time: 0.1
  #- problem_size: 102
    #id: SCHEDULE_4
    #time: 0.1  
  #- problem_size: 103
    #id: SCHEDULE_5
    #time: 0.1                
  #- problem_size: 300
    #id: SCHEDULE_6
    #time: 4               
  #- problem_size: 312
    #id: SCHEDULE_7
    #time: 8               
  #- problem_size: 307
    #id: SCHEDULE_8
    #time: 10               
##  - problem_size: 294
##    id: SCHEDULE_9
##    time: 90              

##    size    time [s]
##    300     2.6
##    312     5
##    320     5
##    298     6
##    307     7
##    296     10
##    305     11
##    308     23
##    309     27
##    294     15
##    317     15
##    301     38
##    311     46
    
    
    
#SEGMENT:
  #id: SEGMENT
  #name: Segmentace obrazu
  #ref_script: segment.py
  #ref_lang: PYTHON27
  #input:
  #- id: SEGMENT_1
    #time: 0.02
  #- id: SEGMENT_2
    #time: 0.5

  #- id: SEGMENT_3
    #problem_size: 16
    #time: 0.02
  #- id: SEGMENT_4
    #problem_size: 64
    #time: 0.04
  #- id: SEGMENT_5
    #problem_size: 256
    #time: 0.5
  #- id: SEGMENT_6
    #problem_size: 1024
    #time: 10

    
    
#---
###############################
## Input specification:
## input:
## # Single entry per test case, test can have more runs.
##
## # An fixed input test. Use generic test script. Expects pair of files: TEST_0.in, TEST_0.out.
## - in: TEST_0
##   time: 0.01          # Time limit i seconds.   
##
## - in: TEST_1          # Name of the test case.
##   problem_size: 10    # Size of the problem, serves also as a seed for the random generator.
##   random: false       # Deterministic test case. Seed is set to the problem size.
##   cases: 1            # Number of test case instances. Dafult and only meningfull value for deeterministic case is 1.
## 
## # Calls: <the_script>   -s 10
##
## - in: TEST_2
##   problem_size: 10
##   random: true        # Randomized seed. More instances meaningfull
##   cases: 5
##
## # Calls: <the_script>   -s 10 -r  
##
## TODO: seems that most of the input generating scripts expect a seed parameter after the '-r'. Has to be fixed eventualy, however seems to make no problems.

#TEST:
  #id: TEST
  #name: IO test
  #ref_script: test_ref.py
  #ref_lang: PYTHON27
  #multiple_solution: true
  #problem_size_description: ''
  #input:
  #- id: TEST_1
    #problem_size: 5
    #random: true
    #time: 1
  #- id: TEST_2
    #problem_size: 150
    #random: false
    #time: 1
  #- id: TEST_3
    #time: 1


#VERI:
  #id: VERI
  #name: Test 2
  #ref_script: veri_ref.py
  #ref_lang: PYTHON27
  #multiple_solution: true
  #problem_size_description: ''
  #input:
  #- id: VERI_1
    #time: 1

##MINOS:
  ##id: MINOS
  ##name: Bludiste
  ##ref_script: minos.cpp
  ##ref_lang: CPP11
  ##input:
  ##- #size: 3x3
    ##id: MINOS_1
    ##time: 0.02
  ##- #size: 5x5
    ##id: MINOS_2
    ##time: 0.01
    
  ##- id: MINOS_3
    ##problem_size: 20
    ##time: 0.02
    ##random: false

  ##- id: MINOS_4
    ##problem_size: 30
    ##time: 0.02
    ##random: true
  ##- id: MINOS_5
    ##problem_size: 1000      # 0.008 s   
    ##time: 0.02
  ##- id: MINOS_6
    ###problem_size: 10000
    ##time: 0.1               # 0.063 s  # size limit for small modulo, should be n*m < 2000
  ##- id: MINOS_7
    ##problem_size: 100000
    ##time: 1                 # 0.414 s
  ##- id: MINOS_8
    ##problem_size: 300004
    ##time: 2                 # 0.414 s

    
#WEBISL:
  #id: WEBISL
  #name: Web islands
  #ref_script: webisl.cpp
  #ref_lang: CPP
  #multiple_solution: false
  #problem_size_description: ''
  #input:
  #- problem_size: 4
    #id: WEBISL_case_1
    #time: 0.02
  #- problem_size: 6
    #id: WEBISL_case_2
    #time: 0.02
  #- problem_size: 8
    #id: WEBISL_case_3
    #time: 0.02
  #- problem_size: 10
    #id: WEBISL_case_4
    #time: 0.02
    #random: true
  #- problem_size: 100
    #id: WEBISL_case_5
    #time: 0.02
    #random: true
  #- problem_size: 1000
    #id: WEBISL_case_6
    #time: 0.05               # 0.016 s
    #random: false
  #- problem_size: 10000
    #id: WEBISL_case_7
    #time: 0.2                # 0.113 s
    #random: false
  #- problem_size: 100000
    #id: WEBISL_case_8
    #time: 2                  # 1 s
    #random: false
  #- problem_size: 500000
    #id: WEBISL_case_9
    #time: 10                 # 5 s
    #random: false
  
##IDOS:
  ##id: IDOS
  ##name: IDOS
  ##ref_script: idos.py
  ##ref_lang: PYTHON27
  ##input:
  ##- id: IDOS_1          
    ##time: 0.1           # 0.070 s
  ##- id: IDOS_2
    ##time: 0.1           # 0.070 s
  
  ##- id: IDOS_3
    ##problem_size: 10
    ##time: 0.2           # 0.1 s
  ##- id: IDOS_4
    ##problem_size: 20
    ##time: 0.4           # 0.2 s
    ##random: true
  ##- id: IDOS_5
    ##problem_size: 100
    ##time: 2             # 1s
  ##- id: IDOS_6
    ##problem_size: 200
    ##time: 5             # 2s
### works localy but not on server, unknown error
###  - id: IDOS_7
###    problem_size: 800
###    time: 20             # 2s

#BIGLOKO1:
  #id: BIGLOKO1
  #name: Zeleznice
  #ref_script: "../generic"
  #input:
  #- id: BIGLOKO1_1
    #time: 0.1
  #- id: BIGLOKO1_2
    #time: 0.1
  #- id: BIGLOKO1_100
    #time: 0.1
  #- id: BIGLOKO1_1000
    #time: 0.1
  #- id: BIGLOKO1_10k
    #time: 0.3
  #- id: BIGLOKO1_100k
    #time: 3

    
#SCHEDULE:
  #id: SCHEDULE
  #name: Rozvrh
  #ref_script: schedule.py
  #ref_lang: PYTHON35
  #problem_size_description: 'Number of subjects = n_vtx.'
  #input:
  #- id: SCHEDULE_1
    #time: 0.1
  #- problem_size: 100
    #id: SCHEDULE_2
    #time: 0.1
  #- problem_size: 101
    #id: SCHEDULE_3
    #time: 0.1
  #- problem_size: 102
    #id: SCHEDULE_4
    #time: 0.1  
  #- problem_size: 103
    #id: SCHEDULE_5
    #time: 0.1                
  #- problem_size: 300
    #id: SCHEDULE_6
    #time: 4               
  #- problem_size: 312
    #id: SCHEDULE_7
    #time: 8               
  #- problem_size: 307
    #id: SCHEDULE_8
    #time: 10               
##  - problem_size: 294
##    id: SCHEDULE_9
##    time: 90              

##    size    time [s]
##    300     2.6
##    312     5
##    320     5
##    298     6
##    307     7
##    296     10
##    305     11
##    308     23
##    309     27
##    294     15
##    317     15
##    301     38
##    311     46
    
    
    
#SEGMENT:
  #id: SEGMENT
  #name: Segmentace obrazu
  #ref_script: segment.py
  #ref_lang: PYTHON27
  #input:
  #- id: SEGMENT_1
    #time: 0.02
  #- id: SEGMENT_2
    #time: 0.5

  #- id: SEGMENT_3
    #problem_size: 16
    #time: 0.02
  #- id: SEGMENT_4
    #problem_size: 64
    #time: 0.04
  #- id: SEGMENT_5
    #problem_size: 256
    #time: 0.5
  #- id: SEGMENT_6
    #problem_size: 1024
    #time: 10

##SUDOGOB:
  ##id: SUDOGOB
  ##name: Sudoku
  ##ref_script: "../generic"
  ##input:
  ##- id: SUDOGOB_1
    ##time: 0.1
  ##- id: SUDOGOB_2
    ##time: 26

    
#RELCONN:
  #id: RELCONN
  #name: Nejspolehlivejsi cesta
  #ref_script: relconn_general.cc
  #ref_lang: CPP11
  #input:
  #- comment: problem size 6
    #id: RELCONN_1
    #time: 0.1                  # 0.008      ... measured time of reference solution
  #- problem_size: 8
    #id: RELCONN_2
    #time: 0.1                 # 0.008
  #- problem_size: 9
    #id: RELCONN_3
    #time: 0.1                 # 0.008
  #- problem_size: 8
    #id: RELCONN_4
    #time: 0.1                 # 0.008
  #- problem_size: 11
    #id: RELCONN_5
    #time: 0.1                 # 0.008
    #random: true
  #- problem_size: 100
    #id: RELCONN_6
    #time: 0.1                 # 0.030
  #- problem_size: 1000
    #id: RELCONN_7
    #time: 0.5                  # 0.250
  #- problem_size: 10000
    #id: RELCONN_8
    #time: 5                    # 2.5
  #- problem_size: 20000
    #id: RELCONN_9
    #time: 10                   # 5 
      
   
    
